#:kivy 1.8.0
#:import KivyLexer kivy.extras.highlight.KivyLexer
#:import Factory kivy.factory.Factory

                
<ConnectionPopup>:
    title: 'Verbindungseinstellungen'
    pos_hint: {'x': 0.25, 'y': 0.35}
    size_hint: (0.5,0.65)
    BoxLayout:
        size: self.size
        orientation: 'vertical' 
        #pos_hint: {'x': 0.25, 'y': 0.25}
        Button:
            text: 'Configure app (or press F1)'
            on_release: app.open_settings()
        Label:
            id: label1
            text: 'StatusStatus'
        ComboEdit:
            id: txt_ip
            multiline:False
            #text:"IP"
            text:"192.168.0.100"
            #text:"127.0.0.1"
            #on_focus:app.hide(txt_ip) if args[1] else app.unhide(txt_ip,'IP')
            options: app.previous_ips
        TextInput:
            id: txt_port
            multiline:False
            #text:"PORT"
            text:"5007"
            on_focus:app.hide(txt_port) if args[1] else app.unhide(txt_port,'PORT')
     
        Button:
            id: btn_connect
            text: "Connect"
            on_press: app.connect(root.ids['txt_ip'].text, root.ids['txt_port'].text) 
        Button:
            id: btnExit
            text: "Exit"
            on_press: root.dismiss() 

<ActionSpinnerOptions@SpinnerOption>
    background_color: .4, .4, .4, 1

<ActionSpinner@Spinner+ActionItem>
    canvas.before:
        Color:
            rgba: 0.128, 0.128, 0.128, 1
        Rectangle:
            size: self.size
            pos: self.pos
    border: 27, 20, 12, 12
    background_normal: 'atlas://data/images/defaulttheme/action_group'
    option_cls: Factory.ActionSpinnerOptions

<ActionDropdown>:
    on_size: self.width = '220dp'

<ShowcaseScreen>:
    ScrollView:
        do_scroll_x: False
        do_scroll_y: False if root.fullscreen else (content.height > root.height - dp(16))
        AnchorLayout:
            size_hint_y: None
            height: root.height if root.fullscreen else max(root.height, content.height)
            GridLayout:
                id: content
                cols: 1
                spacing: '8dp'
                padding: '8dp'
                size_hint: (1, 1) if root.fullscreen else (.8, None)
                height: self.height if root.fullscreen else self.minimum_height

BoxLayout:
    orientation: 'vertical'
    canvas.before:
        Color:
            rgb: .6, .6, .6
        Rectangle:
            size: self.size
            source: 'data/background.png'

    ActionBar:
        ActionView:
            id: av
            ActionPrevious:
                #with_previous: (False if sm.current_screen.name == 'button' else True) if sm.current_screen else False
                with_previous: False
                #on_release: app.go_hierarchy_previous()
                #on_press: app.get_running_app().stop()
                on_press: app.disconnect()
            ActionButton:           
            ActionButton:
                id: actionstart
                text: 'Start'
                gid: self.text
                on_pos: app.register_widget(self)
                on_release: app.action(self)
                important: True
                font_size: '25sp'   
            ActionButton:
                id: actionweiter
                text: 'Weiter'
                gid: self.text
                on_pos: app.register_widget(self)
                on_release: app.action(self)
                disabled: True
                important: True
                font_size: '25sp'               
            ActionButton:
            ActionButton:
            ActionSpinner:
                id: spnr
                important: True
                text: 'Bitte auswaehlen'
                font_size: '25sp'
                values: app.screen_names
                on_text:
                    if sm.current != args[1]:\
                    idx = app.screen_names.index(args[1]);\
                    app.go_screen(idx)
      
    ScrollView:
        id: sv
        size_hint_y: None
        height: 0
        font_size: '25sp'

        CodeInput:
            id: sourcecode
            lexer: KivyLexer()
            text: app.sourcecode
            readonly: True
            size_hint_y: None
            font_size: '12sp'
            height: self.minimum_height

    ScreenManager:
        id: sm
        on_current_screen:
            spnr.text = args[1].name
            idx = app.screen_names.index(args[1].name)
            if idx > -1: app.hierarchy.append(idx)

        on_touch_down:
